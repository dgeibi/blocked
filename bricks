#!/bin/bash
# BRICKS the Gfwed domains list by @leaskh

addDomain() {
    if [ "$1" = '' ]; then
        echo 'Domain can not be empty!';
        exit 1
    fi
    echo $1 >> $brickFile
    cleanList
    echo 'Done :)'
}

removeDomain() {
    grep -v "$1" $brickFile > $brickFile.temp
    mv $brickFile.temp $brickFile
    cleanList
    echo 'Done :)'
}

cleanList() {
    sort -u $brickFile -o $brickFile
}

makePac() {
    cleanList
    sort -u $whiteFile -o $whiteFile
    if [ "$*" = '' ]; then
        echo 'Proxy configurations can not be empty!';
        exit 1
    fi
    length=0
    opFile=proxy.pac
    sed -i '/^$/d' $brickFile
    while read line; do
        if [ "$line" != '' ]; then
            length=$(( length + 1 ))
        fi
    done < $brickFile
cat <<EOF > $opFile
'// BRICKS Pac by @leaskh';
'// https://github.com/leask/bricks';
'// www.leaskh.com, i@leaskh.com';

function FindProxyForURL(url, host) {
  var bricks = {
EOF
sed -e "s/.*/  '\0': 1,/" -e "$ s/,//" $brickFile >> $opFile
cat <<EOF >> $opFile
};

var white = {
EOF
sed -e "s/.*/  '\0': 1,/" -e "$ s/,//" $whiteFile >> $opFile
cat <<EOF >> $opFile
};

var proxy = '$*';

function testDomain(target, domains) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var suffix;
  var pos = target.lastIndexOf('.');
  pos = target.lastIndexOf('.', pos - 1);
  while (true) {
    if (pos <= 0) {
      if (hasOwnProperty.call(domains, target)) {
        return true;
      } else {
        return false;
      }
    }
    suffix = target.substring(pos + 1);
    if (hasOwnProperty.call(domains, suffix)) {
      return true;
    }
    pos = target.lastIndexOf('.', pos - 1);
  }
}

if (isPlainHostName(host) || host === '127.0.0.1' || host === 'localhost') {
  return 'DIRECT';
}

if (testDomain(host, white)) {
  return 'DIRECT';
}

if (testDomain(host, bricks)) {
  return proxy;
}

return 'DIRECT';
}
EOF
    echo 'Done :)'
    echo "Rules: $length items."
    echo "Usage: Use the newly created $opFile as your web browser's automatic"
    echo 'PAC(Proxy auto-config) file.'
}

pacServer() {
    makePac "$@"
    echo 'PAC is now serving at: 0.0.0.0:8000'
    echo 'Check it out with: $ curl http://127.0.0.1:8000/proxy.pac'
    python -m http.server
}

unknownCommand() {
    showHelp
    exit 1
}

# BlackBox configurations
brickFile=./domains.txt
whiteFile=./white.txt
# Main logic
case "$1" in
    'add'     ) addDomain    $2;;
    'remove'  ) removeDomain $2;;
    'clean'   ) cleanList      ;;
    'makpac'  ) makePac      $2;;
    'pacsrv'  ) pacServer    $2;;
    *         ) unknownCommand ;;
esac
exit 0
